###############
#
# default.properties
#
###############
#
#  This file contains the install properties for ControlTier
#  Server and Client.
#
###############


###############
#  Jetty
###############

# Enter the value of ControlTier root directory here.
# The value of ${ctier.root.default} is $HOME/ctier on unix, and C:\ctier on windows.
env.ctier_root = ${INSTALL_PATH}

#  the value of JETTY_HOME (e.g. /usr/local/jetty)
server.jetty.home = ${INSTALL_PATH}/pkgs/jetty-${JETTYVERSION}

#  the value of JETTY_BASE (e.g. /usr/local/jetty)
server.jetty.base = ${INSTALL_PATH}/pkgs/jetty-${JETTYVERSION}

#  the listen port used by Jetty (Jetty default is 8080)
server.jetty.port = ${INSTALL_JETTY_PORT}

# the hostname used by jetty
server.jetty.hostname = ${INSTALL_JETTY_HOSTNAME}

#  the application context path for the webdav app
server.jetty.webdav.path = jackrabbit/repository/workbench


################
# User access
#
# Jetty uses the "jetty-users.xml" file to define users, passwords and roles.
#  
# ControlTier Server and Client require that the users with access to 
# the server belong to certain named "roles" that are not present in the 
# default Jetty installation.
# 
# If you want the installer to provide a new ControlTier ready 
# jetty-users.xml file for you (and backup your existing file), set the
# following property to be "true". It is RECOMMENDED that you set this
# to "true" unless you have modified the jetty-users.xml file yourself.

users.install-default = true

# If you choose to maintain your old jetty-users.xml file, then be sure that 
# the user named below belongs to these roles: "user,admin".
# See: http://open.controltier.org/Docs/jetty41-filesonly.html#Configure+Jetty+Realm
################

# the name of the default ControlTier user, will also be used for Jobcenter
jetty.user.name = ${INSTALL_JETTY_USERNAME}
 
# the password of the default ControlTier user
jetty.user.password = ${INSTALL_JETTY_PASSWORD}

################
# ControlTier Server
################

#If the following directories don't exist, the installer will create them

# RDF datastore path
server.rdfdata.path = ${INSTALL_PATH}/workbench/rdfdata

# Webdav root path
server.dav.basedir = ${INSTALL_PATH}/jackrabbit/repository/workbench

################
# ControlTier Client
################

# Base install of AntDepo, CTL_BASE.  (e.g.: $HOME/ctl_base)
env.ctl_base = ${INSTALL_PATH}/ctl

# Location of AntDepo home, CTL_HOME.  (e.g.: $HOME/ctl-version)
env.ctl_home = ${INSTALL_PATH}/pkgs/ctl-${CTLVERSION}

# Administrative hostname used by the ControlTier client. This is the
# hostname value that will appear in Workbench. ${server.jetty.hostname} sets this
# value to the hostname specified in the Jetty section above.
client.hostname = ${server.jetty.hostname}

# Object name used by the ControlTier client. This is the 
# name that will appear in Workbench. ${server.jetty.hostname} sets this 
# value to the hostname specified in the Jetty section above. 
client.node.name = ${server.jetty.hostname} 
 
# Description of this ControlTier client node.  
client.node.description = ControlTier managed node.

# Client node authentication class. Used to configure framework.nodeauthentication.classname
client.nodeauthentication.classname = com.controltier.commander.authentication.WorkbenchNodeAuthResolutionStrategy

################
# Client email settings
################

# recipient addresses to send email (comma separated)
framework.email.tolist = root

# email address appearing in message "from" field
framework.email.from = root

# email address replies should go to
framework.email.replyto = do-not-reply

# The ctl email relay host. must be a functioning smtp relay server
framework.email.mailhost = mail
framework.email.mailport = 25

# User/pass info if the smtp server requires it
framework.email.user =
framework.email.password =
framework.email.ssl = true

# Fail if there is an error
framework.email.failonerror = true

################
# Client SSH settings
################

# Username for remote ssh connections from the node
framework.ssh.user = ${user.name}

# Path to the SSH private key
framework.ssh.keypath = ${user.home}/.ssh/id_dsa



################
# Job Center server installation
################

#  the server install location for job center Jetty server (e.g. /usr/local/jetty)
server.jobcenter.base_path = ${server.jetty.base}

#  the location for job center data
server.jobcenter.data_path = ${INSTALL_PATH}/jobcenter

# the jetty server hostname. (default ${server.jetty.hostname})
server.jobcenter.host = ${INSTALL_JETTY_HOSTNAME}

# jetty server HTTP port (Note: should be different than jetty port above)
server.jobcenter.jetty.port=${INSTALL_JETTY_PORT}


##############
# Reportcenter server installation
##############

# install path for reportcenter
server.reportcenter.home_path = ${server.jetty.base}

# data path for reportcenter
server.reportcenter.base_path = ${INSTALL_PATH}/reportcenter

# the jetty server hostname
server.reportcenter.host = ${INSTALL_JETTY_HOSTNAME}

# the jetty server HTTP port
server.reportcenter.jetty.port = ${INSTALL_JETTY_PORT}

#  the listen port used by the Report server. (Default is 1055)
server.reportcenter.port = ${INSTALL_REPORTS_PORT}

################
# Project depot settings. Used to bootstrap the default project depot
################
depot.default.name = ${INSTALL_PROJECT_NAME}
depot.default.description = ${INSTALL_PROJECT_DESC}
depot.default.organization = ${INSTALL_PROJECT_NAME}
depot.default.create = true

