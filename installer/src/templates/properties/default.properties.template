###############
#
# default.properties
#
###############
#
#  This file contains the install properties for ControlTier
#  Server and Client.
#
###############

# Enter the value of ControlTier root directory here.
# The value of ${ctier.root.default} is $HOME/ctier on unix, and C:\ctier on windows.
env.ctier_root = ${ctier.root.default}

###############
#  Jetty
###############

#  the value of JETTY_HOME 
server.jetty.home = ${env.ctier_root}/pkgs/jetty-@jetty.version@

#  the value of JETTY_BASE 
server.jetty.base = ${server.jetty.home}

#  the listen port used by Jetty (Jetty default is 8080)
server.jetty.port = 8080

#  the https listen port used by Jetty (Jetty default is 8443)
server.jetty.httpsPort = 8443

# the hostname used by jetty
server.jetty.hostname = localhost

#  the application context path for the webdav app
server.jetty.webdav.path = jackrabbit/repository/workbench



################
# User access
#
# Jetty uses the "realm.properties" file to define users, passwords and roles.
#
# ControlTier Server and Client require that the users with access to
# the server belong to certain named "roles" that are not present in the
# default Jetty installation.
#
# If you want the installer to provide a new ControlTier ready
# tomcat-users.xml file for you (and backup your existing file), set the
# following property to be "true". It is RECOMMENDED that you set this
# to "true" unless you have modified the tomcat-users.xml file yourself.

users.install-default = true

# If you choose to maintain your own file, then be sure that
# the user named below belongs to these roles: "user,admin".
################

# the name of the default ControlTier user, will also be used for Jobcenter
jetty.user.name = default

# the password of the default ControlTier user
jetty.user.password = default

################
# Workbench
################

# the jetty server hostname. (default ${server.jetty.hostname})
server.workbench.host = ${server.jetty.hostname}

# workbench server HTTP port. (Default is ${server.jetty.port})
server.workbench.jetty.port = ${server.jetty.port}

#If the following directories don't exist, the installer will create them

# RDF datastore path
server.rdfdata.path = ${env.ctier_root}/workbench/rdfdata

# Webdav root path
server.dav.basedir = ${env.ctier_root}/jackrabbit/repository/workbench

################
# Job Center server installation
################

#  the server install location for job center Jetty server (e.g. /usr/local/jetty)
server.jobcenter.base_path = ${server.jetty.base}

#  the location for job center data
server.jobcenter.data_path = ${env.ctier_root}/jobcenter

# the jetty server hostname. (default ${server.jetty.hostname})
server.jobcenter.host = ${server.jetty.hostname}

# jobcenter server HTTP port. (Default is ${server.jetty.port})
server.jobcenter.jetty.port = ${server.jetty.port}


##############
# Reportcenter server installation
##############

# install path for reportcenter
server.reportcenter.home_path = ${server.jetty.base}

# data path for reportcenter
server.reportcenter.base_path = ${env.ctier_root}/reportcenter

# the jetty server hostname. (default ${server.jetty.hostname})
server.reportcenter.host=${server.jetty.hostname}

# the reportcenter server HTTP port. (Default is ${server.jetty.port})
server.reportcenter.jetty.port = ${server.jetty.port}

# the reportcenter log4j listen port. (Default is 1055)
server.reportcenter.port = 1055

##############
# Jackrabbit server installation
##############
server.jackrabbit.rmi.port = 1099

################
# ControlTier Client
################

# Base install of CTL, CTL_BASE.  (e.g.: $HOME/ctl_base)
env.ctl_base = ${env.ctier_root}/ctl

# Location of CTL home, CTL_HOME.  (e.g.: $HOME/ctl-version)
env.ctl_home = ${env.ctier_root}/pkgs/ctl-@ctl.version@

# Administrative hostname used by the ControlTier client. This is the 
# hostname that will appear in Workbench. ${server.jetty.hostname} sets this 
# value to the hostname specified in the Jetty section above. 
client.hostname = ${server.jetty.hostname} 

# Object name used by the ControlTier client. This is the 
# name that will appear in Workbench. ${server.jetty.hostname} sets this 
# value to the hostname specified in the Jetty section above. 
client.node.name = ${server.jetty.hostname} 

# Description of this ControlTier client node.  
client.node.description = ControlTier managed node.

# Client node authentication class. Used to configure framework.nodeauthentication.classname
client.nodeauthentication.classname = com.controltier.commander.authentication.WorkbenchNodeAuthResolutionStrategy

################
# Client email settings
################

# recipient addresses to send email (comma separated)
framework.email.tolist = root

# email address appearing in message "from" field
framework.email.from = root

# email address replies should go to
framework.email.replyto = do-not-reply

# The ctl email relay host. must be a functioning smtp relay server
framework.email.mailhost = mail
framework.email.mailport = 25

# User/pass info if the smtp server requires it
framework.email.user =
framework.email.password =
framework.email.ssl = true

# Fail if there is an error
framework.email.failonerror = true

################
# Client SSH settings
################

# Username for remote ssh connections from the node
framework.ssh.user = ${user.name}

# Path to the SSH private key
framework.ssh.keypath = ${user.home}/.ssh/id_dsa

################
# Project depot settings. Used to bootstrap the default project depot
################
depot.default.name = default
depot.default.description = 
depot.default.organization =
depot.default.create = true

