# default install root is /opt/ctier
%define installRoot /opt/ctier
%define ctlVersion @ctl.version@
%define ctuser ctier
%define ctgroup ctier
#
# ctier-client
Summary: Client for the ControlTier automation framework
Name: ctier-client
Prefix: %{installRoot}
#BuildRoot: /var/tmp/%{name}-root
BuildRoot: %{_tmppath}/%{name}-buildroot
Version: @version@
Release: @release@
License: Apache
Group: ControlTier
#Source: ctier-client-@version@.tar.gz
Source: ctl-%{ctlVersion}.tgz
URL: http://wiki.controltier.org
Distribution: ControlTier
Vendor: ControlTier, Inc.
Packager: ControlTier <info@controltier.com>
AutoReqProv: no
Requires: java >= 1.5
BuildArch: noarch

%description
ControlTier Client 


%prep
%setup -c -n %{name}-%{version}/pkgs/ctl-%{ctlVersion}
#cd %{_topdir}/BUILD
#rm -rf %{name}-%{version}
#mkdir -p %{_topdir}/BUILD/%{name}-%{version}/pkgs/ctl-%{ctlVersion}
#cd %{_topdir}/BUILD/%{name}-%{version}/pkgs/ctl-%{ctlVersion}

#gzip -dc %{_topdir}/SOURCES/%{name}-%{version}.tgz | tar -xvvf -
#if [ $? -ne 0 ]; then
#  exit $?
#fi
#cd %{_topdir}/BUILD/%{name}-%{version}

#chmod -R a+rX,g-w,o-w .


%build
echo build is skipped

%install
if [ "$RPM_BUILD_ROOT" != "" ] ; then
mkdir -p $RPM_BUILD_ROOT%{installRoot}
fi
echo copying %{name}-%{version} to $RPM_BUILD_ROOT%{installRoot}
%ifos Darwin
cp -R %{_topdir}/BUILD/%{name}-%{version}/* $RPM_BUILD_ROOT%{installRoot}/
%else
cp -r %{_topdir}/BUILD/%{name}-%{version}/* $RPM_BUILD_ROOT%{installRoot}/
%endif

rm $RPM_BUILD_ROOT%{installRoot}/pkgs/ctl-%{ctlVersion}/bin/*.bat
chmod +x $RPM_BUILD_ROOT%{installRoot}/pkgs/ctl-%{ctlVersion}/pkgs/apache-ant-1.7.1p1/bin/{ant,antRun}
chmod +x $RPM_BUILD_ROOT%{installRoot}/pkgs/ctl-%{ctlVersion}/pkgs/apache-ant-1.7.1p1/bin/*.pl
chmod +x $RPM_BUILD_ROOT%{installRoot}/pkgs/ctl-%{ctlVersion}/bin/{ctl,ctl-check,ctl-depot,ctl-acl,ctl-exec,ctl-setup,ctl-extension,ctl-archive}

cat <<END > $RPM_BUILD_ROOT%{installRoot}/ctierrc
export CTIER_ROOT=$RPM_BUILD_ROOT%{installRoot}

export CTL_HOME=$RPM_BUILD_ROOT%{installRoot}/pkgs/ctl-%{ctlVersion}

#
# Uncomment and set this to the CTL_BASE path you are using:

# export CTL_BASE=/path/to/ctl/base

export PATH=\$CTL_HOME/bin:\$PATH

if [ -n "\$BASH" ] ; then
    . \$CTL_HOME/etc/bash_completion.sh ;
    if [ -t 0 -a -z "\$CTL_CLI_TERSE" ]
    then
      CTL_CLI_TERSE=true
      export CTL_CLI_TERSE
    fi
fi

END

%pre

#
# create user/group if necessary
#

/usr/sbin/groupadd -r -f %{ctgroup}
grep \^%{ctuser} /etc/passwd >/dev/null
if [ $? -ne 0 ]; then
  /usr/sbin/useradd  -g %{ctgroup} -r -c "ControlTier user" -d $RPM_INSTALL_PREFIX %{ctuser}
  passwd -l %{ctuser}
fi

%files
%defattr(644, %{ctuser}, %{ctgroup},755)
%undefine __check_files
%dir %{installRoot}
%{installRoot}/ctierrc
%dir %{installRoot}/pkgs
%dir %{installRoot}/pkgs/ctl-%{ctlVersion}
%dir %{installRoot}/pkgs/ctl-%{ctlVersion}/bin
%attr(755,-,-) %{installRoot}/pkgs/ctl-%{ctlVersion}/bin/ctl
%attr(755,-,-) %{installRoot}/pkgs/ctl-%{ctlVersion}/bin/ctl-*
%{installRoot}/pkgs/ctl-%{ctlVersion}/bin/commander-depotsetup.xml
%{installRoot}/pkgs/ctl-%{ctlVersion}/classes/
#%doc %{installRoot}/pkgs/ctl-%{ctlVersion}/docs/
%{installRoot}/pkgs/ctl-%{ctlVersion}/etc/
%{installRoot}/pkgs/ctl-%{ctlVersion}/lib/
%{installRoot}/pkgs/ctl-%{ctlVersion}/pkgs/
%{installRoot}/pkgs/ctl-%{ctlVersion}/tests/
%{installRoot}/pkgs/ctl-%{ctlVersion}/var/

%post

#generate ctierrc file
cd $RPM_INSTALL_PREFIX
cat <<END >  ${RPM_INSTALL_PREFIX}/ctierrc
export CTIER_ROOT=${RPM_INSTALL_PREFIX}

export CTL_HOME=${RPM_INSTALL_PREFIX}/pkgs/ctl-%{ctlVersion}

#
# Uncomment and set this to the CTL_BASE path you are using:

# export CTL_BASE=/path/to/ctl/base

export PATH=\$CTL_HOME/bin:\$PATH

if [ -n "\$BASH" ] ; then
    . \$CTL_HOME/etc/bash_completion.sh ;
    if [ -t 0 -a -z "\$CTL_CLI_TERSE" ]
    then
      CTL_CLI_TERSE=true
      export CTL_CLI_TERSE
    fi
fi

END

cat <<END > ${RPM_INSTALL_PREFIX}/.bashrc
# .bashrc

# Source global definitions
if [ -f /etc/bashrc ]; then
        . /etc/bashrc
fi

# User specific aliases and functions

if [ -f ${RPM_INSTALL_PREFIX}/ctierrc ]; then
        . ${RPM_INSTALL_PREFIX}/ctierrc
else
        echo ${RPM_INSTALL_PREFIX}/ctierrc not found 1>&2
fi
END

cat <<END > ${RPM_INSTALL_PREFIX}/.bash_profile
if [ -f ~/.bashrc ]; then . ~/.bashrc; fi
END

chown %{ctuser}:%{ctgroup} ${RPM_INSTALL_PREFIX}/ctierrc ${RPM_INSTALL_PREFIX}/.bash_profile ${RPM_INSTALL_PREFIX}/.bashrc
chmod 644 ${RPM_INSTALL_PREFIX}/ctierrc ${RPM_INSTALL_PREFIX}/.bash_profile ${RPM_INSTALL_PREFIX}/.bashrc

%clean
rm -rf $RPM_BUILD_ROOT
#rm -rf $RPM_BUILD_ROOT%{installRoot}/
#rm -rf %{_topdir}/BUILD/%{name}-%{version}


%changelog
* Mon Oct 05 2009 Greg Schueler <greg@controltier.com> 3.4.9 
- initial release of ctier-client rpm build