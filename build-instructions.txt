ControlTier complete build procedure:

	Notes: the order of steps is necessary so that subsequent builds will have their dependencies fulfilled by the artifacts produced by previous steps.  This means that some artifacts (for the most part java jar code archives) will need to be copied from the build result of one step into a repository location available to the subsequent builds.
	To accomplish this is to use a local webserver or directory tree in a maven1-style layout.  For each maven-based build in the sequence, set the maven.repo.ctlocal build property to the address of this repository.  After building one component, copy the necessary jars from the build to the local repository so they will be available for the next component.  
	
	
BUILD DEPENDENCIES:  
	Install the following software and define environment variables as described
	Java 1.5: 
		export JAVA_HOME=<jdk 1.5 location>
	Ant 1.7:  (download 1.7.1p1: http://ctl-dispatch.sourceforge.net/repository/apache-ant/zips/apache-ant-1.7.1p1.zip )
		export ANT_HOME=<Ant 1.7 location>
	Maven 1:  
		MAVEN_HOME=<maven location, will differ for CTL vs CTIER>
	Grails 1.0.3 for Jobcenter and Reportcenter: (download: http://dist.codehaus.org/grails/grails-bin-1.0.3.tar.gz )
		export GRAILS_HOME=<Grails location>
   
SOURCE REPOSITORIES:  
	Check out the source code with the following repository URLs, and define the variables to point to their locations, as used by steps in this procedure.
	ControlTier source:
   		svn co https://controltier.svn.sourceforge.net/svnroot/controltier/branches/controltier-3-2-dev ctiersvn
   		export CTIERSVN=`pwd`/ctiersvn	
	CTL source:
   		svn co https://ctl-dispatch.svn.sourceforge.net/svnroot/ctl-dispatch/trunk ctlsvn
   		export CTLSVN=`pwd`/ctlsvn
	Jobcenter source:
		svn co https://webad.svn.sourceforge.net/svnroot/webad/branches/jobcenter-1-0-dev/webad jobcentersvn
   		export JCSVN=`pwd`/jobcentersvn
   		
LOCAL ARTIFACT REPOSITORY:
	Set up a directory to serve as your local repository for build artifacts.  A URL is needed in some locations.
		mkdir localrepo
		export LOCALREPO=`pwd`/localrepo
		export LOCALREPOURL=file://$LOCALREPO
		
	The apache-ant 1.7.1p1 zip file will also be required for the Installer build, so place it in $LOCALREPO/apache-ant/zips/apache-ant-1.7.1p1.zip.

BUILD:

1. Build ctl-dispatch base, see http://ctl-dispatch.wiki.sourceforge.net/Building
	pre-requisite:  SSH installation, and a ssh-keyfile in your home dir.  This is used for testing.
		ssh-keygen -t dsa
		# choose defaults for location "$HOME/.ssh/id_dsa
		# enter empty passphrase
		#
		
	#get the apache-ant-1.7.1p1.zip file
	mkdir -p $LOCALREPO/apache-ant/zips
	cd $LOCALREPO/apache-ant/zips
	wget -N http://ctl-dispatch.sourceforge.net/repository/apache-ant/zips/apache-ant-1.7.1p1.zip
	
	CTLVERS=1.2	
	cd $CTLSVN
    echo maven.repo.ctierlocal = $LOCALREPOURL > build.properties
	MAVEN_HOME=$CTLSVN/maven
	$MAVEN_HOME/bin/maven clean ctl:antConfigure
	$MAVEN_HOME/bin/maven ctl:stgz ctl:tgz ctl:zip
	
	artifacts: ctl-dispatch-X.jar, ctl-dispatch-X.tgz
	    # NOTE:  the ctl-dispatch.jar is renamed to ctl.jar intentionally
     	mkdir -p $LOCALREPO/ctl/jars
     	mkdir -p $LOCALREPO/ctl-dispatch/tgzs
     	cp target/ctl-dispatch-$CTLVERS.jar $LOCALREPO/ctl/jars/ctl-$CTLVERS.jar
     	cp target/dist/tgzs/ctl-dispatch-$CTLVERS.tgz $LOCALREPO/ctl-dispatch/tgzs/ctl-dispatch-$CTLVERS.tgz
     
2. Build Controltier "common" libs and the Workbench war, see http://controltier.wiki.sourceforge.net/Building
	MAVEN_HOME=$CTIERSVN/maven
	
	CTIERVERS=3.2.4
	# 1. common libraries
	cd $CTIERSVN/common
	$MAVEN_HOME/bin/maven -Djava.net.preferIPv4Stack=true java:jars
		
    artifacts: ctier-common-X.jar, ctier-common-vocabulary-X.jar, ctier-base-seed-X.jar
     
     	mkdir -p $LOCALREPO/ctier-common/jars
     	mkdir -p $LOCALREPO/ctier-common-vocabulary/jars
     	mkdir -p $LOCALREPO/ctier-base-seed/jars
     	cp target/distributions/ctier-common/jars/ctier-common-$CTIERVERS.jar $LOCALREPO/ctier-common/jars/ctier-common-$CTIERVERS.jar
     	cp target/distributions/ctier-common-vocabulary/jars/ctier-common-vocabulary-$CTIERVERS.jar $LOCALREPO/ctier-common-vocabulary/jars/ctier-common-vocabulary-$CTIERVERS.jar
     	cp target/distributions/ctier-base-seed/jars/ctier-base-seed-$CTIERVERS.jar $LOCALREPO/ctier-base-seed/jars/ctier-base-seed-$CTIERVERS.jar
     	
    # 2. workbench
    cd $CTIERSVN/workbench
    
	# set local repository definition
	echo maven.repo.ctlocal = $LOCALREPOURL > build.properties
	$MAVEN_HOME/bin/maven -Djava.net.preferIPv4Stack=true java:jar-resources
	$MAVEN_HOME/bin/maven -Djava.net.preferIPv4Stack=true java:jar war
	
    artifacts: itnav-X.war
     
     	mkdir -p $LOCALREPO/itnav/wars
     	cp target/itnav.war $LOCALREPO/itnav/wars/itnav-$CTIERVERS.war	
	
     
3. Build Controltier's commander-extension for CTL
	cd $CTIERSVN/commander
	$MAVEN_HOME/bin/maven -Djava.net.preferIPv4Stack=true java:jar-resources 
	$MAVEN_HOME/bin/maven -Djava.net.preferIPv4Stack=true extension:package
   
    artifacts: commander-extension-X.jar, commander-X.jar
     	mkdir -p $LOCALREPO/commander-extension/jars
     	mkdir -p $LOCALREPO/commander/jars
     	cp dist/jars/commander-extension-X.jar $LOCALREPO/commander-extension/jars/commander-extension-X.jar
     	cp target/commander-X.jar $LOCALREPO/commander/jars/commander-X.jar
  
4. Build or download the coreutils extension for CTL
	# build instructions incomplete.  Please download from repository for now
	#svn co https://moduleforge.svn.sourceforge.net/svnroot/moduleforge/coreutils coreutils
	#cd coreutils
	#...???
    #artifacts: coreutils-extension-X.jar
     
    # NOTE: without build instructions, download this file from the sourceforge project website and place in the local repo:
    mkdir -p $LOCALREPO/coreutils-extension/jars
    cd $LOCALREPO/coreutils-extension/jars
    wget http://ctl-dispatch.sourceforge.net/repository/coreutils-extension/jars/coreutils-extension-0.9.jar
   
5. Build the ctl-bundle
	cd $CTLSVN/bundle
	export MAVEN_HOME=../maven
	echo maven.repo.ctier = $LOCALREPOURL > build.properties
	$MAVEN_HOME/bin/maven clean ctl:bundle
   
    artifacts: ctl-X.tgz, ctl-X.zip
     	mkdir -p $LOCALREPO/ctl/zips
     	mkdir -p $LOCALREPO/ctl/tgzs
     	cp target/dist/zips/ctl-$CTLVERS.zip $LOCALREPO/ctl/zips/ctl-$CTLVERS.zip
     	cp target/dist/tgzs/ctl-$CTLVERS.tgz $LOCALREPO/ctl/tgzs/ctl-$CTLVERS.tgz

6. Build Jobcenter
	cd $JCSVN
	JCVERS=1.1
	# copy the dependencies into the lib directory
	cp $LOCALREPO/ctl/jars/ctl-$CTLVERS.jar lib/
	cp $LOCALREPO/ctier-common/jars/ctier-common-$CTIERVERSX.jar lib/
	cp $LOCALREPO/ctier-common-vocabulary/jars/ctier-common-vocabulary-$CTIERVERS.jar lib/
	cp $LOCALREPO/commander/jars/commander-$CTIERVERS.jar lib/
	export PATH=$PATH:$GRAILS_HOME/bin
	$ANT_HOME/bin/ant -Djetty.archive.available=true -f build.xml dist
   
    artifacts: jobcenter-X.zip
     	mkdir -p $LOCALREPO/jobcenter/zips
     	cp target/jobcenter-$JCVERS.zip $LOCALREPO/jobcenter/zips/jobcenter-$JCVERS.zip

7. Build Reportcenter
	cd $CTIERSVN/reportcenter
	RCVERS=0.6
	# copy the dependencies into the lib directory
	cp $LOCALREPO/ctier-common/jars/ctier-common-$CTIERVERS.jar lib/
	export PATH=$PATH:$GRAILS_HOME/bin
	$ANT_HOME/bin/ant -Djetty.archive.available=true -f build.xml dist
   
    artifacts: reportcenter-X.zip
     	mkdir -p $LOCALREPO/reportcenter/zips
     	cp target/reportcenter-$RCVERS.zip $LOCALREPO/reportcenter/zips/reportcenter-$RCVERS.zip
   
8. Buid the controltier installers
	cd $CTIERSVN/installer
	
	echo maven.repo.ctlocal = $LOCALREPOURL > build.properties
	$MAVEN_HOME/bin/maven -Djava.net.preferIPv4Stack=true clean installer:create
   
    artifacts: target/dist/ControlTier-Installer/jars/ControlTier-Installer-$CTIERVERS.jar, target/dist/ControlTier/zips/ControlTier-$CTIERVERS.zip
   
   